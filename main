<!DOCTYPE html>
<html>
<head>
    <title>Windows Solitaire Winning Animation</title>
    <style>
        body {
            margin: 0;
            overflow: hidden;
        }
        canvas {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
        }
    </style>
</head>
<body>
    <canvas id="canvas"></canvas>
    <script>
        // Canvas setup
        const canvas = document.getElementById('canvas');
        const ctx = canvas.getContext('2d');
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;

        // Image setup
        const image = new Image();
        image.src = 'your_image_url_here'; // Replace with your desired image URL

        // Animation variables
        let imageX = 0;
        let imageY = 0;
        let velX = 0;
        let velY = 0;
        let gravity = 0.5;
        let angle = 0;
        let rotateSpeed = 0.05;

        // Main game loop
        function animate() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);

            // Update the position of the image
            imageX += velX;
            imageY += velY;

            // Update the vertical velocity of the image due to gravity
            velY += gravity;

            // Check for collision with the screen edges
            if (imageX < 0 || imageX + image.width > canvas.width) {
                velX = -velX;
            }
            if (imageY < 0) {
                velY = Math.abs(velY);  // Reverse vertical velocity after bouncing on top
            }
            if (imageY + image.height > canvas.height) {
                velY = -velY * 0.9;  // Reverse vertical velocity with damping factor after bouncing on bottom
                imageY = canvas.height - image.height;
            }

            // Rotate the image
            ctx.save();
            ctx.translate(imageX + image.width / 2, imageY + image.height / 2);
            ctx.rotate(angle);
            ctx.drawImage(image, -image.width / 2, -image.height / 2);
            ctx.restore();
            angle += rotateSpeed;

            // Repeat the animation
            requestAnimationFrame(animate);
        }

        // Event listener for mouse click to spawn a new image
        canvas.addEventListener('mousedown', function(event) {
            imageX = event.clientX - image.width / 2;
            imageY = event.clientY - image.height / 2;
            velX = Math.random() * 10 - 5;
            velY = -Math.random() * 10;
        });

        // Start the animation
        animate();
    </script>
</body>
</html>
